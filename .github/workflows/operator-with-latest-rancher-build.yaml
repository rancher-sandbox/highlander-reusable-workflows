name: Build operator with latest rancher
on:
  workflow_call:
    inputs:
      operator_name:
        description: 'Name of the operator e.g. aks-operator'
        required: true
        default: ''
        type: string
      rancher_ref:
        description: "Submit PR against the following rancher/rancher branch (e.g. release/v2.7)"
        default: "release/v2.8"
        type: string
      operator_commit:
        description: "Operator commit to use for updating rancher/rancher"
        required: true
        default: ""
        type: string
jobs:
  set_build_date:
    runs-on: ubuntu-latest
    outputs:
      BUILD_DATE: ${{ steps.setbuilddate.outputs.build_date}}
    steps:
    - name: Set current date as env variable
      id: setbuilddate
      run: echo "build_date=$(date +'%Y%m%d')" >> "$GITHUB_OUTPUT"
  nightly_image:
    env:
        OPERATOR_IMAGE_REPO_BASE: ttl.sh/${{ inputs.operator_name }}-nightly
        TAG: 1d
        BUILD_DATE: ${{ needs.set_build_date.outputs.BUILD_DATE }}
    runs-on: ubuntu-latest
    outputs:
      REPO: ${{ steps.setoutputs.outputs.repo}}
    needs: set_build_date
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
            fetch-depth: 0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ env.OPERATOR_IMAGE_REPO_BASE}}-${{ env.BUILD_DATE }}:${{ env.TAG }}
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: ${{ inputs.operator_name }}
          file: test/e2e/Dockerfile.e2e
          build-args: |
            TAG=${{ env.TAG }}
            REPO=${{ env.OPERATOR_IMAGE_REPO_BASE }}-${{ env.BUILD_DATE }}
            COMMIT=${{ github.sha }}
      - name: Set outputs
        id: setoutputs
        run: |
          echo "repo=${{ env.OPERATOR_IMAGE_REPO_BASE }}-${{ env.BUILD_DATE }}" >> "$GITHUB_OUTPUT"
  nightly_operator_charts:
    env:
        REPO: ${{ needs.nightly_image.outputs.REPO }}
        OPERATOR_HELM_REPO: oci://ttl.sh/${{ inputs.operator_name }}
        TAG: 1d
        BUILD_DATE: ${{ needs.set_build_date.outputs.BUILD_DATE }}
    runs-on: ubuntu-latest
    needs: 
      - set_build_date
      - nightly_image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: rancher/${{ inputs.operator_name }}
          ref: main
          path: ${{ inputs.operator_name }}
      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
            version: 'v3.12.1'
      - name: Build charts
        working-directory: ${{ inputs.operator_name }}
        run: |
          make charts
        env:
            CHART_VERSION: ${{ env.BUILD_DATE }}
            GIT_TAG: ${{ env.BUILD_DATE }}
      - name: Push operator charts
        working-directory: ${{ inputs.operator_name }}
        run: |
          helm push bin/rancher-${{ inputs.operator_name }}-crd-${{ env.BUILD_DATE }}.tgz ${{ env.OPERATOR_HELM_REPO }}
          helm push bin/rancher-${{ inputs.operator_name }}-${{ env.BUILD_DATE }}.tgz ${{ env.OPERATOR_HELM_REPO }}
      - name: Upload operator helm chart as artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: rancher-${{ inputs.operator_name }}-${{ env.BUILD_DATE }}.tgz 
          path: ${{ inputs.operator_name }}/bin/rancher-${{ inputs.operator_name }}-${{ env.BUILD_DATE }}.tgz 
      - name: Upload CRD helm chart as artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: rancher-${{ inputs.operator_name }}-crd-${{ env.BUILD_DATE }}.tgz
          path: ${{ inputs.operator_name }}/bin/rancher-${{ inputs.operator_name }}-crd-${{ env.BUILD_DATE }}.tgz 
  
